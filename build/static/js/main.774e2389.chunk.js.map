{"version":3,"sources":["util.js","components/Navbar.js","components/TradeModal.js","components/App.js","reportWebVitals.js","index.js"],"names":["truncateAddress","address","substring","length","Navbar","props","state","navOptions","account","isConnected","window","ethereum","request","method","then","response","setState","connect","catch","err","code","console","log","error","className","this","map","option","href","onClick","e","connectAccounts","React","Component","approvalStates","TradeModal","fromValue","toValue","regExp","primaryActionState","fromToken","name","price","Math","random","balance","toToken","isValid","isLoading","isApprovalLoading","approvedTokens","Set","isTokenApproved","connected","inputText","target","value","test","computeToToken","add","val","convPrice","toFixed","preventDefault","handleLoadingState","fromTokenObj","toTokenObj","parseFloat","setTimeout","computeTrade","toast","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","checkTokenApproval","has","approveToken","newestOnTop","rtl","pauseOnFocusLoss","icon","faLink","faCog","handleMaxClick","onChange","handleInputChange","inputmode","autocomplete","type","pattern","placeholder","minlength","maxlength","handleApproval","color","height","width","faUnlockAlt","handleSwapArrowClick","faArrowCircleDown","readOnly","conversionLogic","handleSubmit","App","connectCache","bind","connectedFlag","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.774e2389.chunk.js","sourcesContent":["export function truncateAddress(address) {\n  if (address) {\n    return (\n      address.substring(0, 4) +\n      \"...\" +\n      address.substring(address.length - 4, address.length)\n    );\n  }\n}\n","import React from \"react\";\nimport { truncateAddress } from \"../util\";\nimport \"../assets/css/Navbar.css\";\n\nexport default class Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      navOptions: [\"Trade\", \"Analytics\", \"Team\", \"Contact\"],\n      account: \"\",\n      isConnected: false,\n    };\n  }\n\n  connectAccounts() {\n    if (window.ethereum) {\n      window.ethereum\n        .request({ method: \"eth_requestAccounts\" })\n        .then((response) => {\n          this.setState({\n            account: response[0],\n            isConnected: window.ethereum.isConnected(),\n          });\n          this.props.connect(window.ethereum.isConnected());\n        })\n        .catch((err) => {\n          if (err.code === 4001) {\n            // EIP-1193 userRejectedRequest error\n            // If this happens, the user rejected the connection request.\n            console.log(\"Please connect to MetaMask.\");\n          } else {\n            console.error(err);\n          }\n        });\n    }\n  }\n\n  render() {\n    return (\n      <nav className=\"opyn-nav__container flex justify-between items-center p-5\">\n        <h2>opyn</h2>\n        <ul className=\"opyn-nav__options flex items-center\">\n          {this.state.navOptions.map((option) => {\n            return (\n              <li>\n                <a href=\"#\">{option}</a>\n              </li>\n            );\n          })}\n          {this.state.isConnected ? (\n            <li className=\"opyn-nav__connected-account\">\n              {truncateAddress(this.state.account)}\n            </li>\n          ) : (\n            <li>\n              <button\n                onClick={(e) => this.connectAccounts(e)}\n                className=\"opyn-nav__connect-btn\"\n              >\n                Connect\n              </button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    );\n  }\n}\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCog,\n  faLink,\n  faArrowCircleDown,\n  faUnlockAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Loader from \"react-loader-spinner\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"../assets/css/TradeModal.scss\";\n\nconst approvalStates = [\"Connect Wallet\", \"Swap\"];\n\nclass TradeModal extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      fromValue: \"\",\n      toValue: \"\",\n      regExp: /^[0-9]*[.,]?[0-9]*$/,\n      primaryActionState: 0,\n      fromToken: {\n        name: \"oToken\",\n        price: Math.random() * (100 - 10) + 10,\n        balance: 1000,\n      },\n      toToken: { name: \"USDT\", price: 1, balance: 10000 },\n      isValid: false,\n      isLoading: false,\n      isApprovalLoading: false,\n      approvedTokens: new Set(),\n      isTokenApproved: false,\n    };\n  }\n\n  componentWillUpdate(props) {\n    if (props.connected && !this.state.primaryActionState) {\n      this.setState({ primaryActionState: 1 }, function () {\n        this.isValid();\n      });\n    }\n  }\n\n  handleInputChange(e) {\n    const inputText = e.target.value;\n    if (inputText == \"\" || this.state.regExp.test(inputText)) {\n      this.setState({ [e.target.name]: inputText }, function () {\n        this.computeToToken(inputText);\n        this.isValid();\n      });\n    }\n  }\n\n  approveToken() {\n    const { approvedTokens, fromToken } = this.state;\n    approvedTokens.add(fromToken.name);\n    this.setState({ approvedTokens: approvedTokens });\n  }\n\n  computeToToken(val) {\n    const convPrice = this.state.fromToken.price / this.state.toToken.price;\n    this.setState({ toValue: (convPrice * val).toFixed(2) });\n  }\n\n  isValid() {\n    const { fromValue, fromToken, isTokenApproved } = this.state;\n\n    if (\n      this.state.primaryActionState === 1 &&\n      fromValue > 0 &&\n      isTokenApproved &&\n      fromToken.balance > 0 &&\n      fromValue <= fromToken.balance\n    ) {\n      this.setState({ isValid: true });\n    } else {\n      this.setState({ isValid: false });\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.isValid) {\n      this.handleLoadingState();\n    }\n  }\n\n  computeTrade() {\n    const fromTokenObj = this.state.fromToken;\n    const toTokenObj = this.state.toToken;\n    fromTokenObj.balance -= parseFloat(this.state.fromValue);\n    toTokenObj.balance += parseFloat(this.state.toValue);\n    this.setState(\n      {\n        fromValue: \"\",\n        toValue: \"\",\n        fromToken: fromTokenObj,\n        toToken: toTokenObj,\n      },\n      function () {\n        this.isValid();\n      }\n    );\n  }\n\n  conversionLogic() {\n    if (this.state.isValid) {\n      const convPrice = this.state.fromToken.price / this.state.toToken.price;\n      return (\n        <span>\n          1 {this.state.fromToken.name} = {convPrice} {this.state.toToken.name}\n        </span>\n      );\n    } else {\n      return <span>Please approve token and check balance is sufficient</span>;\n    }\n  }\n\n  handleLoadingState() {\n    this.setState({ isLoading: true });\n    setTimeout(() => {\n      this.setState({ isLoading: false });\n      this.computeTrade();\n      toast.dark(\"✨ Trade successfully executed!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }, 5000);\n  }\n\n  handleSwapArrowClick(e) {\n    e.preventDefault();\n    this.setState(\n      { fromToken: this.state.toToken, toToken: this.state.fromToken },\n      () => {\n        this.checkTokenApproval();\n      }\n    );\n  }\n\n  checkTokenApproval() {\n    const { approvedTokens, fromToken } = this.state;\n    if (!approvedTokens.has(fromToken.name)) {\n      this.setState({ isTokenApproved: false });\n    } else {\n      this.setState({ isTokenApproved: true });\n    }\n  }\n\n  handleMaxClick(e) {\n    e.preventDefault();\n    const convPrice = this.state.fromToken.price / this.state.toToken.price;\n    this.setState(\n      {\n        fromValue: this.state.fromToken.balance,\n        toValue: (convPrice * this.state.fromToken.balance).toFixed(2),\n      },\n      function () {\n        this.isValid();\n      }\n    );\n  }\n\n  handleApproval(e) {\n    e.preventDefault();\n    this.setState({ isApprovalLoading: true });\n    setTimeout(() => {\n      this.approveToken();\n      this.setState({ isApprovalLoading: false, isTokenApproved: true });\n      this.isValid();\n      toast.dark(\"✨ \" + this.state.fromToken.name +  \" has been approved!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }, 5000);\n  }\n\n  render() {\n    return (\n      <div className=\"opyn-trade__modal-container flex justify-center items-center\">\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n        <div className=\"opyn-trade__modal-contents\">\n          <ul className=\"opyn-trade__setting-options flex justify-end mb-4\">\n            <li>\n              <button>\n                <FontAwesomeIcon icon={faLink} />\n              </button>\n            </li>\n            <li>\n              <button>\n                <FontAwesomeIcon icon={faCog} />\n              </button>\n            </li>\n          </ul>\n          <form className=\"opyn-trade__input-container\">\n            <div>\n              <label className=\"flex justify-between items-center\">\n                <span>Pay</span>\n                <a\n                  onClick={(e) => this.handleMaxClick(e)}\n                  href=\"#\"\n                  className=\"opyn-trade__label-span opyn-trade__label-click\"\n                >\n                  Max: {this.state.fromToken.balance}\n                </a>\n              </label>\n              <div className=\"opyn-trade__value-container flex justify-between mt-1\">\n                <button className=\"opyn-trade__token-btn\">\n                  {this.state.fromToken.name}\n                </button>\n                <input\n                  onChange={(e) => this.handleInputChange(e)}\n                  inputmode=\"decimal\"\n                  autocomplete=\"off\"\n                  type=\"text\"\n                  pattern=\"^[0-9]*[.,]?[0-9]*$\"\n                  placeholder=\"0.0\"\n                  minlength=\"1\"\n                  maxlength=\"79\"\n                  name=\"fromValue\"\n                  value={this.state.fromValue}\n                ></input>\n                {!this.state.isTokenApproved &&\n                this.state.primaryActionState ? (\n                  <button\n                    onClick={(e) => this.handleApproval(e)}\n                    className=\"opyn-trade__approve-btn\"\n                  >\n                    {this.state.isApprovalLoading ? (\n                      <Loader\n                        type=\"TailSpin\"\n                        color=\"#00BFFF\"\n                        height={20}\n                        width={20}\n                      />\n                    ) : (\n                      <div>\n                        <FontAwesomeIcon icon={faUnlockAlt} />{\" \"}\n                        <span>Approve</span>\n                      </div>\n                    )}\n                  </button>\n                ) : null}\n              </div>\n            </div>\n            <button\n              onClick={(e) => this.handleSwapArrowClick(e)}\n              className=\"opyn-trade__side-swap mt-4\"\n            >\n              <FontAwesomeIcon icon={faArrowCircleDown} />\n            </button>\n            <div>\n              <label className=\"flex justify-between items-center\">\n                <span>Receive</span>\n                <span className=\"opyn-trade__label-span\">\n                  Available: {this.state.toToken.balance}\n                </span>\n              </label>\n              <div className=\"opyn-trade__value-container flex justify-between mt-1\">\n                <button className=\"opyn-trade__token-btn\">\n                  {this.state.toToken.name}\n                </button>\n                <input\n                  inputmode=\"decimal\"\n                  type=\"text\"\n                  placeholder=\"0.0\"\n                  name=\"toValue\"\n                  value={this.state.toValue}\n                  readOnly\n                ></input>\n              </div>\n            </div>\n            <div className=\"opyn-trade__conv-container my-4\">\n              {this.conversionLogic()}\n            </div>\n            <ul className=\"opyn-trade__detail-container\">\n              <li>\n                <span>Slippage Tolerance</span>\n                <span>0.5%</span>\n              </li>\n              <li>\n                <span>Minimum Received</span>\n                <span>0</span>\n              </li>\n            </ul>\n            <div className=\"opyn-trade__submission-container mt-4\">\n              <button\n                onClick={(e) => this.handleSubmit(e)}\n                className={\n                  this.state.isValid\n                    ? \"opyn-trade__primary-btn flex items-center justify-center\"\n                    : \"opyn-trade__primary-btn opyn-trade__primary-btn-invalid\"\n                }\n              >\n                {this.state.isLoading ? (\n                  <Loader\n                    type=\"TailSpin\"\n                    color=\"#00BFFF\"\n                    className=\"\"\n                    height={40}\n                    width={40}  \n                  />\n                ) : (\n                  approvalStates[this.state.primaryActionState]\n                )}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TradeModal;\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport TradeModal from \"./TradeModal\";\nimport \"../assets/css/App.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isConnected: false,\n    };\n    this.connectCache = this.connectCache.bind(this);\n  }\n\n  connectCache(connectedFlag) {\n    this.setState({ isConnected: connectedFlag });\n  }\n\n  render() {\n    return (\n      <div className=\"opyn-main__container\">\n        <Navbar connect={this.connectCache} />\n        <TradeModal connected={this.state.isConnected} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './assets/css/tailwind.css';\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}